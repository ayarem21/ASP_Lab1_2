// <auto-generated />
using System;
using ArtsNamespace.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace lab1_2.Migrations
{
    [DbContext(typeof(ArtDbContext))]
    [Migration("20201226175554_AddNameToAlbum")]
    partial class AddNameToAlbum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("ArtsNamespace.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("ArtsNamespace.Models.Art", b =>
                {
                    b.Property<int>("ArtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("imagePath")
                        .HasColumnType("TEXT");

                    b.HasKey("ArtId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Art");
                });

            modelBuilder.Entity("ArtsNamespace.Models.Art", b =>
                {
                    b.HasOne("ArtsNamespace.Models.Album", null)
                        .WithMany("Arts")
                        .HasForeignKey("AlbumId");
                });
#pragma warning restore 612, 618
        }
    }
}
